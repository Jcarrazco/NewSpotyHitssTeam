//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebSiteSpotyHitss.SpotyHitssProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Song", Namespace="http://schemas.datacontract.org/2004/07/SpotyHitss.Data.Objects")]
    [System.SerializableAttribute()]
    public partial class Song : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataSongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistName {
            get {
                return this.ArtistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistNameField, value) != true)) {
                    this.ArtistNameField = value;
                    this.RaisePropertyChanged("ArtistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DataSong {
            get {
                return this.DataSongField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSongField, value) != true)) {
                    this.DataSongField = value;
                    this.RaisePropertyChanged("DataSong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongArtist", Namespace="http://schemas.datacontract.org/2004/07/SpotyHitss.Data.Objects")]
    [System.SerializableAttribute()]
    public partial class SongArtist : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Artist_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_ArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_SongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Song_NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artist_Name {
            get {
                return this.Artist_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Artist_NameField, value) != true)) {
                    this.Artist_NameField = value;
                    this.RaisePropertyChanged("Artist_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Artist {
            get {
                return this.ID_ArtistField;
            }
            set {
                if ((this.ID_ArtistField.Equals(value) != true)) {
                    this.ID_ArtistField = value;
                    this.RaisePropertyChanged("ID_Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Song {
            get {
                return this.ID_SongField;
            }
            set {
                if ((this.ID_SongField.Equals(value) != true)) {
                    this.ID_SongField = value;
                    this.RaisePropertyChanged("ID_Song");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Song_Name {
            get {
                return this.Song_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Song_NameField, value) != true)) {
                    this.Song_NameField = value;
                    this.RaisePropertyChanged("Song_Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultOfint", Namespace="http://schemas.datacontract.org/2004/07/SpotyHitss.Data.Objects")]
    [System.SerializableAttribute()]
    public partial class OperationResultOfint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpMesssageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpMesssage {
            get {
                return this.OpMesssageField;
            }
            set {
                if ((object.ReferenceEquals(this.OpMesssageField, value) != true)) {
                    this.OpMesssageField = value;
                    this.RaisePropertyChanged("OpMesssage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpResult {
            get {
                return this.OpResultField;
            }
            set {
                if ((this.OpResultField.Equals(value) != true)) {
                    this.OpResultField = value;
                    this.RaisePropertyChanged("OpResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpStatus {
            get {
                return this.OpStatusField;
            }
            set {
                if ((this.OpStatusField.Equals(value) != true)) {
                    this.OpStatusField = value;
                    this.RaisePropertyChanged("OpStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SpotyHitssProxy.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSearchGenListSong", ReplyAction="http://tempuri.org/IService1/GetSearchGenListSongResponse")]
        WebSiteSpotyHitss.SpotyHitssProxy.Song[] GetSearchGenListSong(string Genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSearchGenListSong", ReplyAction="http://tempuri.org/IService1/GetSearchGenListSongResponse")]
        System.Threading.Tasks.Task<WebSiteSpotyHitss.SpotyHitssProxy.Song[]> GetSearchGenListSongAsync(string Genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListSongContract", ReplyAction="http://tempuri.org/IService1/GetListSongContractResponse")]
        WebSiteSpotyHitss.SpotyHitssProxy.SongArtist[] GetListSongContract(string Artist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListSongContract", ReplyAction="http://tempuri.org/IService1/GetListSongContractResponse")]
        System.Threading.Tasks.Task<WebSiteSpotyHitss.SpotyHitssProxy.SongArtist[]> GetListSongContractAsync(string Artist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAlbum", ReplyAction="http://tempuri.org/IService1/AddAlbumResponse")]
        string AddAlbum(int ReleaseYear, string Album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAlbum", ReplyAction="http://tempuri.org/IService1/AddAlbumResponse")]
        System.Threading.Tasks.Task<string> AddAlbumAsync(int ReleaseYear, string Album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertSong", ReplyAction="http://tempuri.org/IService1/InsertSongResponse")]
        WebSiteSpotyHitss.SpotyHitssProxy.OperationResultOfint InsertSong(WebSiteSpotyHitss.SpotyHitssProxy.Song song);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertSong", ReplyAction="http://tempuri.org/IService1/InsertSongResponse")]
        System.Threading.Tasks.Task<WebSiteSpotyHitss.SpotyHitssProxy.OperationResultOfint> InsertSongAsync(WebSiteSpotyHitss.SpotyHitssProxy.Song song);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebSiteSpotyHitss.SpotyHitssProxy.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebSiteSpotyHitss.SpotyHitssProxy.IService1>, WebSiteSpotyHitss.SpotyHitssProxy.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebSiteSpotyHitss.SpotyHitssProxy.Song[] GetSearchGenListSong(string Genre) {
            return base.Channel.GetSearchGenListSong(Genre);
        }
        
        public System.Threading.Tasks.Task<WebSiteSpotyHitss.SpotyHitssProxy.Song[]> GetSearchGenListSongAsync(string Genre) {
            return base.Channel.GetSearchGenListSongAsync(Genre);
        }
        
        public WebSiteSpotyHitss.SpotyHitssProxy.SongArtist[] GetListSongContract(string Artist) {
            return base.Channel.GetListSongContract(Artist);
        }
        
        public System.Threading.Tasks.Task<WebSiteSpotyHitss.SpotyHitssProxy.SongArtist[]> GetListSongContractAsync(string Artist) {
            return base.Channel.GetListSongContractAsync(Artist);
        }
        
        public string AddAlbum(int ReleaseYear, string Album) {
            return base.Channel.AddAlbum(ReleaseYear, Album);
        }
        
        public System.Threading.Tasks.Task<string> AddAlbumAsync(int ReleaseYear, string Album) {
            return base.Channel.AddAlbumAsync(ReleaseYear, Album);
        }
        
        public WebSiteSpotyHitss.SpotyHitssProxy.OperationResultOfint InsertSong(WebSiteSpotyHitss.SpotyHitssProxy.Song song) {
            return base.Channel.InsertSong(song);
        }
        
        public System.Threading.Tasks.Task<WebSiteSpotyHitss.SpotyHitssProxy.OperationResultOfint> InsertSongAsync(WebSiteSpotyHitss.SpotyHitssProxy.Song song) {
            return base.Channel.InsertSongAsync(song);
        }
    }
}
